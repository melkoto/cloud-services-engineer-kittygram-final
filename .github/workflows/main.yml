name: CI/CD Kittygram

on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Lint backend
        run: |
          pip install flake8
          flake8 backend/

      - name: Run backend tests
        working-directory: ./backend
        run: |
          pip install -r requirements.txt
          python manage.py test

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/kittygram_backend:latest
          push: true

      - name: Build and push frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/kittygram_frontend:latest
          push: true

      - name: Build and push gateway
        uses: docker/build-push-action@v4
        with:
          context: ./nginx
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/kittygram_gateway:latest
          push: true

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: List files before SCP
        run: ls -la

      - name: Ensure directory exists on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            mkdir -p ~/kittygram

      - name: Copy docker-compose.yml via SCP
        uses: appleboy/scp-action@v0.1.1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: docker-compose.yml
          target: "~/kittygram"
          port: 22
          timeout: 30s
          command_timeout: 10m
          proxy_port: 22
          proxy_timeout: 30s

      - name: Create .env on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cat <<EOF > ~/kittygram/.env
            SECRET_KEY=${{ secrets.SECRET_KEY }}
            DEBUG=${{ secrets.DEBUG }}
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            EOF

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
            cd ~/kittygram
            docker compose down || { echo "Failed to bring down existing containers"; exit 1; }
            docker compose pull || { echo "Failed to pull Docker images"; exit 1; }
            docker compose up -d || { echo "Failed to start Docker containers"; exit 1; }
            docker compose exec backend python manage.py migrate || { echo "Failed to run migrations"; exit 1; }
            docker compose exec backend python manage.py collectstatic --noinput || { echo "Failed to collect static files"; exit 1; }

      - name: Send Telegram notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: "âœ… Deployment successful! Kittygram is live at ${{ secrets.KITTYGRAM_DOMAIN }}"
