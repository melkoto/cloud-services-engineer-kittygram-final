name: CI/CD Kittygram

on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Lint backend
        run: |
          pip install flake8
          flake8 backend/

      - name: Run backend tests
        working-directory: ./backend
        run: |
          pip install -r requirements.txt
          python manage.py test

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/kittygram_backend:latest
          push: true

      - name: Build and push frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/kittygram_frontend:latest
          push: true

      - name: Build and push gateway
        uses: docker/build-push-action@v4
        with:
          context: ./nginx
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/kittygram_gateway:latest
          push: true

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Copy docker-compose.yml via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: "docker-compose.yml"
          target: "~/kittygram"

      - name: Install Docker and Docker Compose on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # Install Docker if not installed
            if ! command -v docker &> /dev/null; then
              sudo apt update
              sudo apt install -y docker.io
              sudo systemctl start docker
              sudo systemctl enable docker
            fi

            # Install Docker Compose if not installed
            if ! docker compose version &> /dev/null; then
              sudo mkdir -p /usr/local/lib/docker/cli-plugins
              sudo curl -SL https://github.com/docker/compose/releases/download/v2.21.0/docker-compose-linux-x86_64 -o /usr/local/lib/docker/cli-plugins/docker-compose
              sudo chmod +x /usr/local/lib/docker/cli-plugins/docker-compose
            fi

            # Verify installation
            docker compose version

      - name: Executing remote SSH commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/kittygram
            sudo docker compose pull
            sudo docker compose down
            sudo docker compose up -d
            sudo docker compose exec backend python manage.py migrate
            sudo docker compose exec backend python manage.py collectstatic --noinput

      - name: Send Telegram notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: "âœ… Deployment successful! Kittygram is live at ${{ secrets.KITTYGRAM_DOMAIN }}"
